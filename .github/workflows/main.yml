name: Regression

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]
  schedule:
    - cron: '0 5 * * 6'
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  USER_NAME: ${{ secrets.USER_NAME }}
  USER_PASSWORD: ${{ secrets.USER_PASSWORD }}

jobs:
  linux_os:
    name: ${{ matrix.os }} (${{ matrix.browser }})
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-22.04]
        browser: [chromium, firefox, webkit, msedge]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout ${{ github.repository }} repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps ${{ matrix.browser }} chromium
        env:
          DEBUG: pw:install
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1

      - name: Make ESLint
        run: npm run lint

      - name: Run Playwright tests
        run: xvfb-run --auto-servernum --server-args="-screen 0 1366x768x24" -- npm test -- --project=${{ matrix.browser }}

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test results for ${{ matrix.os }} (${{ matrix.browser }})
          path: test-results/junit-results.xml

  mac_os:
    name: ${{ matrix.os }} (${{ matrix.browser }})
    strategy:
      fail-fast: false
      matrix:
        os: [macos-12]
        browser: [chromium, firefox, webkit, msedge]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout ${{ github.repository }} repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps ${{ matrix.browser }} chromium
        env:
          DEBUG: pw:install
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1

      - name: Make ESLint
        run: npm run lint

      - name: Run Playwright tests
        run: npm test -- --project=${{ matrix.browser }}

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test results for ${{ matrix.os }} (${{ matrix.browser }})
          path: test-results/junit-results.xml

  windows_os:
    name: ${{ matrix.os }} (${{ matrix.browser }})
    strategy:
      fail-fast: false
      matrix:
        os: [windows-latest]
        browser: [chromium, firefox, webkit, msedge]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout ${{ github.repository }} repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Use Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'

      - name: Install dependencies
        run: |
          npm ci
          npx playwright install --with-deps ${{ matrix.browser }} chromium
        env:
          DEBUG: pw:install
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1

      - name: Run Playwright tests
        run: npm test -- --project=${{ matrix.browser }}
        shell: bash

      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: Test results for ${{ matrix.os }} (${{ matrix.browser }})
          path: test-results/junit-results.xml

  publish-linux-results:
    name: Publish Linux test results
    needs: linux_os
    runs-on: ubuntu-22.04
    if: always()

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: artifacts/**/*.xml

  publish-macos-results:
    name: Publish MacOS test results
    needs: mac_os
    runs-on: macos-12
    if: always()

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action/composite@v1
        if: always()
        with:
          files: artifacts/**/*.xml

  publish-windows-results:
    name: Publish Windows test results
    needs: windows_os
    runs-on: windows-latest
    if: always()

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v3
        with:
          path: artifacts

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action/composite@v2
        if: always()
        with:
          files: artifacts/**/*.xml
