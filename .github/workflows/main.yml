name: E2E Tests

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]
    
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

jobs:
  test_linux:
    name: ${{ matrix.os }} (${{ matrix.browser }})
    strategy:
      fail-fast: false
      matrix:
        browser: [chromium, firefox, webkit]
        os: [ubuntu-18.04, ubuntu-20.04]
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout ${{ github.repository }} repository
        uses: actions/checkout@v2
        with:
          fetch-depth: 0 # Shallow clones should be disabled for a better relevancy of analysis

      - name: Use Node.js
        uses: actions/setup-node@v2
        with:
          node-version: '14'
          cache: 'npm'
      
      - name: Cache Node.js modules
        uses: actions/cache@v2
        env:
          cache-name: cache-node-modules
        with:
          path: ~/.npm
          key: ${{ runner.os }}-build-${{ env.cache-name }}-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-build-${{ env.cache-name }}-
            ${{ runner.os }}-build-
            ${{ runner.os }}-
        
      - name: Install dependencies
        run: npm ci
        env:
          DEBUG: pw:install
          PLAYWRIGHT_SKIP_BROWSER_DOWNLOAD: 1
        
      - name: Install browsers
        run: npx playwright install --with-deps ${{ matrix.browser }} chromium
        
      - name: Run Playwright tests
        run: xvfb-run --auto-servernum --server-args="-screen 0 1366x768x24" -- npm test -- --project=${{ matrix.browser }}
        
      - name: Upload artifacts
        if: always()
        uses: actions/upload-artifact@v2
        with:
          name: Test results for ${{ matrix.os }} (${{ matrix.browser }})
          path: test-results/junit-results.xml

  publish-test-results:
    name: "Publish Playwright test results"
    needs: test_linux
    runs-on: ubuntu-latest
    if: always()

    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          path: artifacts

      - name: Publish test results
        uses: EnricoMi/publish-unit-test-result-action@v1
        if: always()
        with:
          files: artifacts/**/*.xml